{"version":3,"file":"main.js","mappings":"mBAKO,MAAMA,EAQTC,cAPA,KAAAC,KAAOC,KAAKC,cAAc,OAAQ,OAAQ,MAC1C,KAAAC,YAAcF,KAAKC,cAAc,MAAO,qBAAsB,MAC9D,KAAAE,UAAYH,KAAKC,cAAc,MAAO,iCAAkC,MACxE,KAAAG,MAAQJ,KAAKC,cAAc,QAAS,wCAAyC,CAAC,CAAEI,KAAM,OAAQC,MAAO,QAAU,CAAED,KAAM,WAAYC,MAAO,QAAU,CAAED,KAAM,cAAeC,MAAO,kBAClL,KAAAC,mBAAqBP,KAAKC,cAAc,MAAO,oBAAqB,MACpE,KAAAO,aAAeR,KAAKC,cAAc,SAAU,4BAA6B,CAAC,CAAEI,KAAM,OAAQC,MAAO,YAG7FN,KAAKS,YACT,CAEAR,cAAcI,EAAcK,EAAmBC,GAC3C,MAAMC,EAAOC,SAASZ,cAAcI,GAKpC,OAJAO,EAAKE,UAAUC,IAAIL,GACP,OAARC,GACAA,EAAIK,SAAQL,GAAOC,EAAKK,aAAaN,EAAIN,KAAMM,EAAIL,SAEhDM,CACX,CAEAH,aACIT,KAAKQ,aAAaU,YAAc,WAChClB,KAAKG,UAAUgB,OAAOnB,KAAKI,OAC3BJ,KAAKE,YAAYiB,OAAOnB,KAAKG,WAC7BH,KAAKO,mBAAmBY,OAAOnB,KAAKQ,cACpCR,KAAKD,KAAKoB,OAAOnB,KAAKE,YAAaF,KAAKO,mBAE5C,CAEAa,OAAOC,GACHA,EAAEC,gBACN,ECjCJ,MAAMC,EAAS,ICFR,MAKHzB,cAJO,KAAA0B,KAAOX,SAASY,cAAc,QAC9B,KAAAC,QAAUb,SAASZ,cAAc,OACjC,KAAA0B,cAAgB,IAAI9B,CAEX,CAEhB0B,SACSvB,KAAKwB,OAGVxB,KAAKwB,KAAKL,OAAOnB,KAAK0B,SACtB1B,KAAK0B,QAAQZ,UAAUC,IAAI,WAC3Bf,KAAK0B,QAAQP,OAAOnB,KAAK2B,cAAc5B,MAE3C,GDVJ6B,OAAOC,iBAAiB,QADX,IAAMN,EAAOA,U","sources":["webpack://test-task/./src/view/components/form/form.ts","webpack://test-task/./src/index.ts","webpack://test-task/./src/view/pageRender.ts"],"sourcesContent":["type Atr = {\r\n    name: string,\r\n    value: string,\r\n}\r\n\r\nexport class FormComponent {\r\n    form = this.createElement('form', 'form', null);\r\n    inputBorder = this.createElement('div', 'form__input-border', null);\r\n    inputWrap = this.createElement('div', 'form__input-border__field-wrap', null);\r\n    input = this.createElement('input', 'form__input-border__field-wrap__field', [{ name: 'type', value: 'text' }, { name: 'required', value: 'true' }, { name: 'placeholder', value: 'Вaш номер...' }]);\r\n    submitButtonBorder = this.createElement('div', 'form__button-wrap', null);\r\n    submitButton = this.createElement('button', 'form__button-wrap__button', [{ name: 'type', value: 'submit' }]);\r\n\r\n    constructor() {\r\n        this.createForm();\r\n    }\r\n\r\n    createElement(name: string, className: string, atr: Atr[] | null): HTMLElement {\r\n        const elem = document.createElement(name);\r\n        elem.classList.add(className);\r\n        if (atr !== null) {\r\n            atr.forEach(atr => elem.setAttribute(atr.name, atr.value));\r\n        }\r\n        return elem;\r\n    }\r\n\r\n    createForm(): void {\r\n        this.submitButton.textContent = 'Заказать';\r\n        this.inputWrap.append(this.input);\r\n        this.inputBorder.append(this.inputWrap);\r\n        this.submitButtonBorder.append(this.submitButton);\r\n        this.form.append(this.inputBorder, this.submitButtonBorder);\r\n\r\n    }\r\n\r\n    submit(e: Event): void {\r\n        e.preventDefault();\r\n    }\r\n}","\"use strict\";\r\nimport './assets/style/style.scss';\r\nimport { PageRender } from './view/pageRender';\r\n\r\nconst render = new PageRender();\r\n\r\nconst page = () => render.render();\r\nwindow.addEventListener('load', page);","import { FormComponent } from \"./components/form/form\";\r\n\r\nexport class PageRender {\r\n    public body = document.querySelector('body');\r\n    public wrapper = document.createElement('div')\r\n    public formComponent = new FormComponent();\r\n\r\n    constructor() { }\r\n\r\n    render() {\r\n        if (!this.body) {\r\n            return;\r\n        }\r\n        this.body.append(this.wrapper);\r\n        this.wrapper.classList.add('wrapper');\r\n        this.wrapper.append(this.formComponent.form);\r\n\r\n    }\r\n}"],"names":["FormComponent","constructor","form","this","createElement","inputBorder","inputWrap","input","name","value","submitButtonBorder","submitButton","createForm","className","atr","elem","document","classList","add","forEach","setAttribute","textContent","append","submit","e","preventDefault","render","body","querySelector","wrapper","formComponent","window","addEventListener"],"sourceRoot":""}